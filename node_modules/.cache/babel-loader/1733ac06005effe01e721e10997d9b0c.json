{"ast":null,"code":"import { ADD_NOTE, DELETE_NOTE, GET_NOTES } from \"./ActionTypes\";\nimport { call } from 'redux-saga/effects';\nimport { requestDeleteNoteId, requestGetNotes, requestAddNote } from \"../service\";\nexport const INITITAL_STATE = {\n  notes: {}\n};\nexport const getNotes = notes => {\n  type: GET_NOTES, notes;\n};\nexport const addNote = note => {\n  type: ADD_NOTE, note;\n};\nexport const deleteNote = noteId => {\n  type: DELETE_NOTE, noteId;\n};\nexport const noteReducer = (state = INITITAL_STATE, action => {\n  switch (action.type) {\n    case GET_NOTES:\n      // const {data} = yield call (requestGetNotes);\n      const {\n        notes\n      } = action;\n      return { ...state,\n        notes\n      };\n\n    case ADD_NOTE:\n      const {\n        note\n      } = action; // const {data} = yield call(requestAddNote,note);\n\n      return { ...state,\n        notes: { ...state.notes,\n          note\n        }\n      };\n\n    case DELETE_NOTE:\n      const {\n        noteId\n      } = action; // const {data} = yield call(requestDeleteNoteId,noteId);\n\n      const filteredNotes = state.notes.filter(id => id !== noteId);\n      return { ...state,\n        notes: filteredNotes\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"names":["ADD_NOTE","DELETE_NOTE","GET_NOTES","call","requestDeleteNoteId","requestGetNotes","requestAddNote","INITITAL_STATE","notes","getNotes","type","addNote","note","deleteNote","noteId","noteReducer","state","action","filteredNotes","filter","id"],"sources":["/Users/aniketmunim/Documents/Assesments/Walmart/my-app/src/redux/reducers.js"],"sourcesContent":["import { ADD_NOTE, DELETE_NOTE, GET_NOTES } from \"./ActionTypes\"\nimport {call} from 'redux-saga/effects'\nimport { requestDeleteNoteId, requestGetNotes , requestAddNote } from \"../service\";\n\nexport const INITITAL_STATE = {\n    notes:{}\n}\n\nexport const getNotes = (notes) =>{\n    type:GET_NOTES,\n    notes\n}\n\nexport const addNote = (note) =>{\n    type:ADD_NOTE,\n    note\n}\n\nexport const deleteNote = (noteId) =>{\n    type:DELETE_NOTE,\n    noteId\n}\n\n\n\nexport const noteReducer = (state = INITITAL_STATE, (action)=>{\n    switch(action.type) {\n        case GET_NOTES:\n            // const {data} = yield call (requestGetNotes);\n            const {notes} = action\n            return {...state,notes}\n        case ADD_NOTE:\n            const {note} = action;\n            // const {data} = yield call(requestAddNote,note);\n            return {...state,notes:{...state.notes,note}};\n        case DELETE_NOTE:  \n            const {noteId} = action;\n            // const {data} = yield call(requestDeleteNoteId,noteId);\n            const filteredNotes = state.notes.filter(id=>id!==noteId)\n            return {...state,notes:filteredNotes}\n        default:\n            return state  \n    }});"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,WAAnB,EAAgCC,SAAhC,QAAiD,eAAjD;AACA,SAAQC,IAAR,QAAmB,oBAAnB;AACA,SAASC,mBAAT,EAA8BC,eAA9B,EAAgDC,cAAhD,QAAsE,YAAtE;AAEA,OAAO,MAAMC,cAAc,GAAG;EAC1BC,KAAK,EAAC;AADoB,CAAvB;AAIP,OAAO,MAAMC,QAAQ,GAAID,KAAD,IAAU;EAC9BE,IAAI,EAACR,SAAS,EACdM,KADK;AAER,CAHM;AAKP,OAAO,MAAMG,OAAO,GAAIC,IAAD,IAAS;EAC5BF,IAAI,EAACV,QAAQ,EACbY,IADK;AAER,CAHM;AAKP,OAAO,MAAMC,UAAU,GAAIC,MAAD,IAAW;EACjCJ,IAAI,EAACT,WAAW,EAChBa,MADK;AAER,CAHM;AAOP,OAAO,MAAMC,WAAW,IAAIC,KAAK,GAAGT,cAAR,EAAyBU,MAAD,IAAU;EAC1D,QAAOA,MAAM,CAACP,IAAd;IACI,KAAKR,SAAL;MACI;MACA,MAAM;QAACM;MAAD,IAAUS,MAAhB;MACA,OAAO,EAAC,GAAGD,KAAJ;QAAUR;MAAV,CAAP;;IACJ,KAAKR,QAAL;MACI,MAAM;QAACY;MAAD,IAASK,MAAf,CADJ,CAEI;;MACA,OAAO,EAAC,GAAGD,KAAJ;QAAUR,KAAK,EAAC,EAAC,GAAGQ,KAAK,CAACR,KAAV;UAAgBI;QAAhB;MAAhB,CAAP;;IACJ,KAAKX,WAAL;MACI,MAAM;QAACa;MAAD,IAAWG,MAAjB,CADJ,CAEI;;MACA,MAAMC,aAAa,GAAGF,KAAK,CAACR,KAAN,CAAYW,MAAZ,CAAmBC,EAAE,IAAEA,EAAE,KAAGN,MAA5B,CAAtB;MACA,OAAO,EAAC,GAAGE,KAAJ;QAAUR,KAAK,EAACU;MAAhB,CAAP;;IACJ;MACI,OAAOF,KAAP;EAfR;AAgBE,CAjBkB,CAAjB"},"metadata":{},"sourceType":"module"}