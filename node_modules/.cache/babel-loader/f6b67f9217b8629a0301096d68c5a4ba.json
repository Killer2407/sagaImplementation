{"ast":null,"code":"import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { noteReducer } from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { GET_NOTES } from './ActionTypes';\nimport { takeLatest } from '@redux-saga/core/effects';\nconst sagaMiddleware = createSagaMiddleware();\nexport function* watcherSaga() {\n  yield takeLatest(GET_NOTES, handleGetUser);\n}\nconst middleware = [sagaMiddleware];\nconst store = createStore(noteReducer, {}, applyMiddleware(...middleware));\nsagaMiddleware.run(watcherSaga);\nexport default store;","map":{"version":3,"names":["createStore","applyMiddleware","combineReducers","noteReducer","createSagaMiddleware","GET_NOTES","takeLatest","sagaMiddleware","watcherSaga","handleGetUser","middleware","store","run"],"sources":["/Users/aniketmunim/Documents/Assesments/Walmart/my-app/src/redux/index.js"],"sourcesContent":["import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { noteReducer } from './reducers';\nimport createSagaMiddleware from 'redux-saga';\nimport { GET_NOTES } from './ActionTypes';\nimport { takeLatest } from '@redux-saga/core/effects';\nconst sagaMiddleware = createSagaMiddleware();\n\n\n\nexport function* watcherSaga() {\n    yield takeLatest(GET_NOTES, handleGetUser);\n  }\n\nconst middleware = [sagaMiddleware];\n\nconst store = createStore(noteReducer, {}, applyMiddleware(...middleware));\n\n sagaMiddleware.run(watcherSaga);\n\n export default store;"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,MAAMC,cAAc,GAAGH,oBAAoB,EAA3C;AAIA,OAAO,UAAUI,WAAV,GAAwB;EAC3B,MAAMF,UAAU,CAACD,SAAD,EAAYI,aAAZ,CAAhB;AACD;AAEH,MAAMC,UAAU,GAAG,CAACH,cAAD,CAAnB;AAEA,MAAMI,KAAK,GAAGX,WAAW,CAACG,WAAD,EAAc,EAAd,EAAkBF,eAAe,CAAC,GAAGS,UAAJ,CAAjC,CAAzB;AAECH,cAAc,CAACK,GAAf,CAAmBJ,WAAnB;AAEA,eAAeG,KAAf"},"metadata":{},"sourceType":"module"}